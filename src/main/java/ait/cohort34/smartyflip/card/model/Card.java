/*
 *
 *  *   *******************************************************************
 *  *   *  Copyright (c) Author: Igor Volotovskyi ("Copyright "2024")2024.
 *  *   *******************************************************************
 *
 */

package ait.cohort34.smartyflip.card.model;

import jakarta.persistence.*;
import lombok.*;

import java.time.LocalDateTime;

/**
 * This class represents a card.
 */
@AllArgsConstructor
@NoArgsConstructor
@Getter
@Setter
@EqualsAndHashCode(of = "cardId")
@Entity
@Table(name = "card")
public class Card {
    /**
     * The identifier of a card.
     *
     * The cardId variable is used to uniquely identify a card object in the system.
     * It is automatically generated by the system using the @GeneratedValue annotation,
     * and the strategy is set to GenerationType.IDENTITY which indicates that the
     * database will automatically assign a unique value to the cardId when a new card
     * is created.
     *
     * The cardId field is of type Integer and it represents the primary key column in
     * the "card" table in the database.
     *
     * Note: The cardId field is defined in the Card class which represents a card entity
     * in the system.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    Integer cardId;

    /**
     * The question string represents a question associated with a card.
     * It is a member variable of the Card class.
     */
    String question;

    /**
     * Represents an answer to a question.
     *
     * The answer is a string that provides the response or solution to a given question.
     * It is associated with a Card object, which is a representation of a flashcard and contains additional information.
     */
    String answer;

    /**
     * Represents the date and time of the last update of a card.
     */
    LocalDateTime lastUpdate;

    /**
     * Represents the level of a card.
     *
     * The level of a card represents its difficulty or proficiency level. It is used to track the progress
     * or performance of a card in a learning or assessment system.
     *
     * The level can be one of the following: beginner, intermediate, advanced, expert.
     *
     * This variable is a member of the {@link Card} class and is used to store the level of a card.
     */
    String level;

    /**
     * This variable represents the number of likes a card has received.
     * It is an instance of the Integer class, which is a wrapper class for the primitive type int.
     * The value of this variable can be null, indicating that the card has not received any likes yet.
     * To access or modify the value of this variable, use the appropriate getters and setters methods provided by the Card class.
     *
     * Example usage:
     *
     * Card card = new Card();
     * card.setLikes(10); // Set the number of likes to 10
     * int likes = card.getLikes(); // Get the number of likes
     *
     * Note: The Card class is defined in the same package, so you can directly access and modify the likes variable without any additional imports.
     */
    Integer likes;

    /**
     * The bookmark variable represents whether a card has been bookmarked or not.
     *
     * If the value of bookmark is true, it means that the card has been bookmarked.
     * If the value of bookmark is false, it means that the card has not been bookmarked.
     */
    boolean bookmark;

    /**
     * The identifier of the module that a card belongs to.
     *
     * @see Card
     */
    Integer moduleId;

    /**
     * The name of the stack that a card belongs to.
     */
    String stackName;

//    public Card(String question, String answer, String level, Integer moduleId, String stackName) {
//        this();
//        this.question = question;
//        this.answer = answer;
//        this.level = level;
//        this.moduleId = moduleId;
//        this.stackName = stackName;
//    }
//
//    public Card() {
//        this.lastUpdate = LocalDateTime.now();
//        this.likes = 0;
//        this.bookmark = false;
//    }
}
